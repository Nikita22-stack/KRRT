import TeleBot from 'telebot';
import { database, ref, get, update } from './config.mjs';

const bot = new TeleBot(process.env.TELEGRAM_BOT_TOKEN);

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
bot.on('text', async (msg) => {
    const chatId = msg.chat.id;
    const messageText = msg.text.trim();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–æ–≤–æ 'aura'
    if (messageText.toLowerCase() === 'aura' || '–∞—É—Ä–∞') {
        const usersRef = ref(database, 'user');
        const snapshot = await get(usersRef);

        if (snapshot.exists()) {
            const data = snapshot.val();
            let response = 'üßø –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ aura üßø\n\n';

            for (const [users, info] of Object.entries(data)) {
                response += `${users}: ${info.aura}\n`;
            }

            return bot.sendMessage(chatId, response);
        }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å '+aura'
    if (messageText.startsWith('+aura' || '+–∞—É—Ä–∞')) {
        const parts = messageText.split(' ');

        if (parts.length === 3) {
            const userName = parts[1].toLowerCase();
            const auraToAdd = parseInt(parts[2], 10);

            const normalizedNames = {
                '–≤–∞–¥–∏–º': '–í–∞–¥–∏–º',
                '–Ω–∏–∫–∏—Ç–∞': '–ù–∏–∫–∏—Ç–∞',
                '—è—Ä–∏–∫': '–Ø—Ä–∏–∫'
            };

            const databaseUserName = normalizedNames[userName];

            if (databaseUserName && !isNaN(auraToAdd)) {
                const userRef = ref(database, `user/${databaseUserName}`);
                const userSnapshot = await get(userRef);

                if (userSnapshot.exists()) {
                    const userData = userSnapshot.val();
                    const updatedAura = userData.aura + auraToAdd;
                    const userId = userData.id;

                    await update(userRef, { aura: updatedAura });

                    return bot.sendMessage(chatId, `üëç [${databaseUserName}](tg://user?id=${userId}) —Ç–µ–ø–µ—Ä—å –∏–º–µ–µ—Ç ${updatedAura} aura.`, { parseMode: 'Markdown' });
                } else {
                    return bot.sendMessage(chatId, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userName} –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
                }
            } else {
                return bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ aura.');
            }
        } else {
            return bot.sendMessage(chatId, '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: +aura <–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è> <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ>');
        }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å '-aura'
    if (messageText.startsWith('-aura' || '-–∞—É—Ä–∞')) {
        const parts = messageText.split(' ');

        if (parts.length === 3) {
            const userName = parts[1].toLowerCase();
            const auraToRemove = parseInt(parts[2], 10);

            const normalizedNames = {
                '–≤–∞–¥–∏–º': '–í–∞–¥–∏–º',
                '–Ω–∏–∫–∏—Ç–∞': '–ù–∏–∫–∏—Ç–∞',
                '—è—Ä–∏–∫': '–Ø—Ä–∏–∫'
            };

            const databaseUserName = normalizedNames[userName];

            if (databaseUserName && !isNaN(auraToRemove)) {
                const userRef = ref(database, `user/${databaseUserName}`);
                const userSnapshot = await get(userRef);

                if (userSnapshot.exists()) {
                    const userData = userSnapshot.val();
                    const updatedAura = userData.aura - auraToRemove;
                    const userId = userData.id;

                    await update(userRef, { aura: updatedAura });

                    return bot.sendMessage(chatId, `ü§° [${databaseUserName}](tg://user?id=${userId}) —Ç–µ–ø–µ—Ä—å –∏–º–µ–µ—Ç ${updatedAura} aura.`, { parseMode: 'Markdown' });
                } else {
                    return bot.sendMessage(chatId, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userName} –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
                }
            } else {
                return bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ aura.');
            }
        } else {
            return bot.sendMessage(chatId, '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: -aura <–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è> <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ>');
        }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–æ–≤–æ '–ø—Ä–∞–≤–∏–ª–∞'
    if (messageText.toLowerCase() === '–ø—Ä–∞–≤–∏–ª–∞') {
        return bot.sendMessage(chatId, `‚ùó –ü–†–ê–í–ò–õ–ê ‚ùó
        
–ò–∑–Ω–∞—á–∞–ª—å–Ω–æ —É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ 1000aura

+aura –∑–∞ –∑–∞—Å–ª—É–≥–∏ –≤ –∏–≥—Ä–µ (–æ–±—Å—É–∂–¥–∞—é—Ç—Å—è –∫–æ–Ω—Å–∏–ª–∏—É–º–æ–º)

-50aura - –æ—Å–∫–æ—Ä–±–∏–ª –º–∞–º—É –∏–≥—Ä–æ–∫–∞ —á—É–∂–æ–π –∫–æ–º–∞–Ω–¥—ã
-100aura - –æ—Å–∫–æ—Ä–±–∏–ª –º–∞–º—É –∏–≥—Ä–æ–∫–∞ —Å–≤–æ–µ–π –∫–æ–º–∞–Ω–¥—ã
-100aura - —É—à–µ–ª –≥—É–ª—è—Ç—å –¥–æ —Ç–æ–≥–æ –∫–∞–∫ –¥–æ–≥–æ–≤–æ—Ä–∏–ª–∏—Å—å –ø–æ–∏–≥—Ä–∞—Ç—å (—Ç—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤, —á–µ–º–ø–∏–æ–Ω)
-120aura - –Ω–∞–Ω—ã–ª —Ä–æ–ª—å
-250aura - —É—à–µ–ª —Å –∂–µ–Ω—â–∏–Ω–æ–π 1vs1 (–Ω—É–∂–µ–Ω –ø—Ä—É—Ñ)
-300aura - —É—à–µ–ª –≥—É–ª—è—Ç—å –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –¥–æ–≥–æ–≤–æ—Ä–∏–ª–∏—Å—å
-400aura - —É—à–µ–ª —Ö–∞–ø–∞—Ç—å
-450aura - –ª–∏–≤/—Ä—É–∏–Ω
-500aura - —É—à–µ–ª —Å –¥—Ä—É–≥–æ–π –∫–æ–º–∞–Ω–¥–æ–π (–ø—Ä–æ–º–µ–Ω—è–ª –ø–∞—Ü–∞–Ω–æ–≤)
-600aura - —É—à–µ–ª –≤ –∑–∞–ø–æ–π
-700aura - –∑–∞–≥–∞—Å –ø–æ—Å–ª–µ –¥–æ–≥–æ–≤–æ—Ä–∞ (—É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –≤—ã—Ö–æ–¥–∏—Ç –Ω–∞ —Å–≤—è–∑—å)
-–∂–∏–∑–Ω—å - –æ—Å–∫–æ—Ä–±–∏–ª –º–∞–º—É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞ –∫–æ–º–∞–Ω–¥—ã

+50aura - —Ñ—É–ª–ª –ø–æ–∑
+200aura - 20+ –∫–∏–ª–ª–æ–≤
+250aura - 30+ –∫–∏–ª–æ–≤
+350aura - RAMPAGE
+400aura - –∑–∞—Ç–∞—â–∏–ª –≤ —Å–æ–ª–æ (–æ–±—Å—É–∂–¥–∞–µ—Ç—Å—è –∫–æ–Ω—Å–∏–ª–∏—É–º–æ–º)

aura 0 - –±–∞–Ω –≤ –∫–æ–º–∞–Ω–¥–µ –Ω–∞ 7 –¥–Ω–µ–π (—Å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –Ω–µ –∏–≥—Ä–∞–µ–º) –∏–ª–∏ –∂–µ 3 –¥–Ω—è —Ñ—É–ª–ª –ø–æ–∑

aura 2000 - –ø—Ä–∏–≤–µ—Ç—Å–≤–µ–Ω–Ω—ã–π –±–æ–Ω—É—Å –≤ –≤–∏–¥–µ —à–æ–∫–æ–ª–∞–¥–∫–∏ –Ω–∞ –≤—ã–±–æ—Ä –¥–æ 300—Ä (—Å–∫–∏–¥ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤)
–ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–Ω—É—Å–∞ –∏–ª–∏ —Ä–∞–∑–±–∞–Ω–∞ –∞—É—Ä–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –ø—Ä–∏—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç—Å—è –∫ 1000`);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–æ–≤–æ '–∫–æ–º–∞–Ω–¥—ã'
    if (messageText.toLowerCase() === '–∫–æ–º–∞–Ω–¥—ã') {
        return bot.sendMessage(chatId, `üìã –ö–û–ú–ê–ù–î–´ üìã

aura - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—É—Ä—ã —É –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
+aura <–∏–º—è> <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ> - –ø—Ä–∏–±–∞–≤–∏—Ç—å aura
-aura <–∏–º—è> <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ> - —É–±–∞–≤–∏—Ç—å aura
–ø—Ä–∞–≤–∏–ª–∞ - –Ω–∞—à–∏ —É—Å–ª–æ–≤–∏—è`)
    }
});

export default bot;
